{"version":3,"sources":["globals.ts","state/selectors.ts","state/showPossibleSelection.ts","state/fill.ts","state/reducer.ts","state/recoil.ts","state/store.ts","Settings/recoil.ts","ui/Divider.ts","ui/Heading.ts","ui/CollapsibleWidth.tsx","Settings/Settings.tsx","System/useKeyDownEffect.ts","System/System.tsx","History/Record.tsx","History/History.tsx","validation/recoil.ts","Grid/Pencil.tsx","Grid/Pen.tsx","Grid/CellOverlay.tsx","Grid/Cell.tsx","Grid/Box.tsx","Grid/Grid.tsx","Game/AllowedValues.tsx","Game/RowsAid.tsx","Game/ColumnsAid.tsx","Game/Timer.tsx","Game/Highlighter.tsx","Game/Game.tsx","generator/normalizers.ts","generator/transform.ts","Maker/Maker.tsx","App.tsx","index.tsx"],"names":["Fill","flags","isSelecting","selectingFill","Size","Pen","PenFont","Pencil","PencilFont","Colors","Error","Selected","Disabled","Highlight","FontFamily","getId","row","column","getIndices","parseInt","isWithin","test","lower","upper","getBlockIndex","Math","floor","getBlockId","getBlockPosition","selectSelected","selected","selectDisabled","disabled","selectPencils","history","present","pencils","selectValues","values","selectHighlights","highlights","selectIsFilled","filled","selectHasValues","selectStarted","length","showPossibleSelection","state","value","id","rows","Array","fill","columns","blocks","possibilities","identifier","push","args","key","filter","isDisabled","isUnnotable","Color","changes","reduce","Auto","Normal","Delete","mark","marks","period","record","slice","initialRecord","initialState","reduceHistory","Object","keys","findLastInput","max","it","resetHistory","numericRegex","RegExp","createSlice","name","reducers","make","_","board","payload","i","smartFill","selectedPerBlock","count","forEach","index","toggleDisabled","x","y","undo","redo","timeTravel","selectAll","j","select","isSelected","foundAt","indexOf","setSelected","clearSelected","reducer","actions","lastSelectedState","atom","default","store","createStore","composeWithDevTools","columRowAidState","autoPencilState","autoSelectPossibleState","showHistoryState","showMakerState","canOverscrollState","window","Divider","styled","div","marginLeft","SectionHeading","h2","margin","fontSize","SubsectionHeading","transitionStyles","entering","transform","maxWidth","entered","exiting","exited","defaultSyles","display","transition","transformOrigin","CollapsibleWidth","isCollapsed","children","Transition","in","timeout","unmountOnExit","style","Container","overflow","ToggleContainer","flexDirection","whiteSpace","paddingLeft","labelStyle","fontFamily","Toggle","props","inlineLabel","styles","label","RecoilControl","useRecoilState","isOn","setIsOn","checked","onChange","GivensControl","dispatch","useDispatch","useSelector","hasValues","Group","heading","Settings","getIdFromArrowKey","indices","nextRow","nextColumn","transformId","System","lastSelected","setLastSelected","shouldSmartFill","useRecoilValue","handleKeyDown","event","metaKey","shiftKey","altKey","code","match","digit","preventDefault","idFromArrow","useEffect","addEventListener","removeEventListener","useKeyDownEffect","resetLastSelected","useResetRecoilState","canOverscroll","handleBlur","useCallback","document","body","overscrollBehavior","Subject","span","color","cursor","backgroundColor","paddingRight","fontWeight","HighlightContainer","alignItems","justifyContent","height","width","border","borderRadius","getElementId","colorToValue","dictionary","Record","ref","useRef","current","scrollIntoView","content","affects","action","createAction","onClick","behavior","block","Scroll","paddingTop","Timeline","map","History","canSeeHistory","getUniqueValues","unique","Set","add","Number","isColliding","repeats","rowState","atomFamily","uniqueRowSelector","selectorFamily","get","rowSelector","set","previous","isRowValidSelector","columnState","uniqueColumnSelector","columnSelector","isColumnValidSelector","blockState","uniqueBlockSelector","blockSelector","position","isBlockValidSelector","tryUniqueCellSelector","rowSet","columnSet","blockSet","cells","toString","has","Grid","lineHeight","gridRow","gridColumn","manualPencil","selectPencil","uniqueValues","doAutoFill","autoPencil","remainingValue","size","handleDoubleClick","pencil","number","onDoubleClick","isValid","selectIsDisabled","isRowValid","isColumnValid","isBlockValid","useIsValid","setRow","useSetRecoilState","setColumn","setBlock","setValue","useValueEffect","Selection","halfCell","substring","CellOverlay","isFirstSelected","highlight","selectHighlight","selectionStyle","boxShadow","undefined","highlightStyle","Cell","selectValue","selectIsSelected","selectIsFirstSelected","onMouseEnter","onMouseDown","button","gap","Box","relativeRow","relativeColumn","handleMouseDown","boxes","AllowedValue","AllowedValues","AllowedColumnValues","AllowedRowValues","gridAutoFlow","rowGap","padding","gridTemplateColumns","gridTemplateRows","RowsAid","columnGap","ColumnsAid","PlayTime","CompletedTime","marginRight","zeroPad","n","getTimer","ms","rawMinutes","seconds","minutes","hours","getTime","types","start","type","Date","now","Timer","completed","started","useReducer","ellapsed","changeEllapsed","intervalId","saved","completedTime","pace","setInterval","reset","clearInterval","time","Bar","Button","Highlighter","userSelect","ColumnsContainer","RowsContainer","GridContainer","TimerContainer","HighlighterContainer","Aid","Game","tuplesToGrid","tuples","tuple","grid","getGridIndex","mutateOrder","sequence","pick","temp","last","random","createIndicesTranslator","first","second","third","section","reorderIndices","transposeXY","transposeXYInverse","transposeCombined","createTransposer","transposer","min","ceil","getRandomNumber","input","output","translateRow","translateColumn","transpose","translateNumber","createNumberTranslator","StringInput","show","useState","setDisabled","TextField","newValue","placeholder","multiline","PrimaryButton","PresetButton","game","Presets","Transform","Maker","handleMouseUp","App","onMouseUp","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.e854744b.chunk.js","sourcesContent":["// AKA the garbage module\n\nexport const flags = {\n  isSelecting: false,\n  selectingFill: true,\n};\n\nexport const LIST = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\nexport const Size = {\n  Pen: `60px`,\n  PenFont: `45px`,\n  Pencil: `20px`,\n  PencilFont: `12px`,\n};\n\nexport const Colors = {\n  Fill: '#1e88e5',\n  Error: `#d32f2f`,\n  Selected: `#fff59d`,\n  Disabled: 'black',\n  Pencil: `#757575`,\n  Highlight: [\n    '#8adbd3',\n    '#edafb0',\n    '#dfecba',\n    '#b4beec',\n    '#dfb5e0',\n    '#a4d3a8',\n    '#81c9ea',\n    '#bac68d',\n    '#ddc094',\n  ],\n};\n\nexport const FontFamily = {\n  All: `Open Sans,Roboto,sans-serif`,\n  OG: `Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif`,\n};\n\nexport enum Fill {\n  Normal,\n  Pencil,\n  Delete,\n  Auto,\n  Color,\n}\n\nexport type Indices = {\n  row: number;\n  column: number;\n};\n\nexport const getId = (row: number | string, column: number | string) => {\n  return `${row}${column}`;\n};\n\nexport const getIndices = ({0: row, 1: column}: string) => {\n  return {\n    row: parseInt(row, 10),\n    column: parseInt(column, 10),\n  };\n};\n\nexport const isWithin = (test: number, lower: number, upper: number) => {\n  return lower <= test && test <= upper;\n};\n\nexport const transformId = (id: string, indices: Indices) => {\n  const {row, column} = getIndices(id);\n\n  const nextRow = row + indices.row;\n  const nextColumn = column + indices.column;\n\n  if (isWithin(nextRow, 0, 8) && isWithin(nextColumn, 0, 8)) {\n    return getId(nextRow, nextColumn);\n  } else {\n    return '';\n  }\n};\n\nexport const getRandomNumber = (max: number, min: number = 0) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const getBlockIndex = (row: number, column: number) => {\n  return Math.floor(row / 3) * 3 + Math.floor(column / 3);\n};\n\nexport const getBlockId = ({row, column}: Indices) => {\n  return `${row - (row % 3)}${column - (column % 3)}`;\n};\n\n// Get cell position on block\nexport const getBlockPosition = ({row, column}: Indices) => {\n  return (row % 3) * 3 + (column % 3);\n};\n","import {Identifier, State} from './types';\n\nexport const selectSelected = ({selected}: State) => selected;\n\nexport const selectDisabled = ({disabled}: State) => disabled;\n\nexport const selectIsDisabled = (id: Identifier) => (state: State) =>\n  !!selectDisabled(state)[id];\n\nexport const selectPencils = ({history, present}: State) =>\n  history[present].pencils;\n\nexport const selectValues = ({history, present}: State) =>\n  history[present].values;\n\nexport const selectHighlights = ({history, present}: State) =>\n  history[present].highlights;\n\nexport const selectPencil = (id: Identifier) => (state: State) =>\n  selectPencils(state)[id];\n\nexport const selectValue = (id: Identifier) => (state: State) =>\n  selectValues(state)[id];\n\nexport const selectHighlight = (id: Identifier) => (state: State) =>\n  selectHighlights(state)[id];\n\nexport const selectIsSelected = (id: Identifier) => ({selected}: State) =>\n  selected.indexOf(id) >= 0;\n\nexport const selectIsFirstSelected = (id: Identifier) => ({selected}: State) =>\n  selected.length > 1 ? selected[0] === id : false;\n\nexport const selectIsFilled = ({filled}: State) => filled === 81;\n\nexport const selectHasValues = ({filled}: State) => filled > 0;\n\n// Returns the ref to differentiate between cycling through new games\nexport const selectStarted = ({history}: State) => {\n  if (history.length === 1) {\n    return history[0];\n  }\n  return;\n};\n","import {selectValues} from './selectors';\nimport {Identifier, State} from './types';\nimport {getBlockIndex} from '../globals';\n\nexport const showPossibleSelection = (\n  state: State,\n  value: string,\n  id: Identifier,\n) => {\n  const values = selectValues(state);\n\n  // Found on:\n  const rows = new Array(9).fill(false);\n  const columns = new Array(9).fill(false);\n  const blocks = new Array(9).fill(false);\n\n  for (let row = 0; row < 9; row++) {\n    for (let column = 0; column < 9; column++) {\n      const identifier = `${row}${column}`;\n\n      if (values[identifier] === value) {\n        rows[row] = true;\n        columns[column] = true;\n        blocks[getBlockIndex(row, column)] = true;\n      }\n    }\n  }\n\n  const possibilities = [id];\n\n  for (let row = 0; row < 9; row++) {\n    for (let column = 0; column < 9; column++) {\n      const identifier = `${row}${column}`;\n\n      if (\n        identifier !== id &&\n        !values[identifier] &&\n        !blocks[getBlockIndex(row, column)] &&\n        !rows[row] &&\n        !columns[column]\n      ) {\n        possibilities.push(identifier);\n      }\n    }\n  }\n\n  return possibilities;\n};\n","import {Fill} from '../globals';\n\nimport {State, FillArgs, Inputs} from './types';\nimport {\n  selectDisabled,\n  selectHighlights,\n  selectPencils,\n  selectValues,\n} from './selectors';\n\nexport const fill = (args: {state: State} & FillArgs): State => {\n  const {state, key, fill} = args;\n\n  const values = selectValues(state);\n  const pencils = selectPencils(state);\n  const highlights = selectHighlights(state);\n  const disabled = selectDisabled(state);\n\n  const selected = (args.selected || state.selected).filter(id => {\n    const isDisabled = disabled[id];\n\n    const isUnnotable =\n      values[id] && (fill === Fill.Pencil || fill === Fill.Color);\n\n    return !(isDisabled || isUnnotable);\n  });\n\n  if (!selected.length) {\n    return state;\n  }\n\n  const changes = selected.reduce<Pick<State, 'filled'> & Inputs>(\n    (changes, id) => {\n      switch (fill) {\n        case Fill.Auto:\n        case Fill.Normal: {\n          if (!values[id]) {\n            ++changes.filled;\n          }\n\n          changes.values[id] = key;\n          break;\n        }\n        case Fill.Delete: {\n          if (values[id]) {\n            --changes.filled;\n            changes.values[id] = '';\n          } else if (highlights[id]) {\n            changes.highlights[id] = '';\n          } else {\n            changes.pencils[id] = {};\n          }\n          break;\n        }\n        case Fill.Pencil: {\n          const {[key]: mark, ...marks} = pencils[id] || {};\n\n          if (mark) {\n            changes.pencils[id] = marks;\n          } else {\n            changes.pencils[id] = {\n              ...marks,\n              [key]: true,\n            };\n          }\n          break;\n        }\n        case Fill.Color: {\n          changes.highlights[id] = key;\n          break;\n        }\n      }\n\n      return changes;\n    },\n    // Minimizes spread per iteration by accumulating first\n    {filled: 0, values: {}, pencils: {}, highlights: {}},\n  );\n\n  const period = {\n    pencils: {\n      ...pencils,\n      ...changes.pencils,\n    },\n    values: {\n      ...values,\n      ...changes.values,\n    },\n    highlights: {\n      ...highlights,\n      ...changes.highlights,\n    },\n    record: {key, fill, selected},\n  };\n\n  const present = state.present + 1;\n  const history = [...state.history.slice(0, present), period]; // Override from current present\n  const filled = state.filled + changes.filled;\n\n  return {...state, history, present, filled};\n};\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {Fill, getBlockIndex, getId, getIndices} from '../globals';\n\nimport {State, Identifier, Values, Inputs, FillArgs} from './types';\nimport {selectValues} from './selectors';\nimport {showPossibleSelection} from './showPossibleSelection';\nimport {fill} from './fill';\n\nconst initialRecord = {fill: Fill.Normal, key: '', selected: []};\n\nconst initialState: State = {\n  history: [\n    {\n      values: {},\n      pencils: {},\n      highlights: {},\n      record: initialRecord,\n    },\n  ],\n  present: 0,\n  disabled: {},\n  selected: [],\n  filled: 0,\n};\n\nconst reduceHistory = ({\n  present,\n  state,\n}: {\n  present: State['present'];\n  state: State;\n}): State => {\n  const {values} = state.history[present];\n\n  return {\n    ...state,\n    present,\n    filled: Object.keys(values).filter(key => values[key]).length,\n  };\n};\n\nconst findLastInput = (state: State): State['present'] => {\n  const {history, present} = state;\n\n  if (history[present].record.fill !== Fill.Auto) {\n    return Math.max(present - 1, 0);\n  }\n\n  let it = present - 1;\n  // Want what is before last input, so extra decrement at the end\n  while (history[it--].record.fill === Fill.Auto) {}\n\n  return Math.max(it, 0);\n};\n\nconst resetHistory = (values: Values): Pick<State, 'history' | 'present'> => {\n  return {\n    history: [\n      {\n        values,\n        pencils: {},\n        highlights: {},\n        record: initialRecord, // TODO: ponder whether I should spread or ref\n      },\n    ],\n    present: 0,\n  };\n};\n\nconst numericRegex = new RegExp('[1-9]');\n\nexport const {reducer, actions} = createSlice({\n  name: 'sudoku',\n  initialState,\n  reducers: {\n    make: (_, {payload: board}: PayloadAction<string>) => {\n      const disabled: State['disabled'] = {};\n      const values: Inputs['values'] = {};\n      let filled = 0;\n\n      for (let i = 0; i < 81; i++) {\n        const row = Math.floor(i / 9);\n        const column = i % 9;\n\n        if (numericRegex.test(board[i])) {\n          const id = getId(row, column);\n\n          values[id] = board[i];\n          disabled[id] = true;\n          ++filled;\n        }\n      }\n\n      return {\n        ...initialState,\n        ...resetHistory(values),\n        filled,\n        disabled,\n      };\n    },\n    fill: (state, {payload}: PayloadAction<FillArgs>) =>\n      fill({state, ...payload}),\n    smartFill: (state, {payload: key}: PayloadAction<string>) => {\n      const selectedPerBlock = new Array(9).fill({id: '', count: 0});\n\n      state.selected.forEach(id => {\n        const {row, column} = getIndices(id);\n\n        const index = getBlockIndex(row, column);\n\n        selectedPerBlock[index] = {\n          id,\n          count: selectedPerBlock[index].count + 1,\n        };\n      });\n\n      const selected = selectedPerBlock.reduce<Identifier[]>(\n        (selected, {id, count}) => {\n          if (count === 1) {\n            selected.push(id);\n          }\n\n          return selected;\n        },\n        [],\n      );\n\n      return fill({state, key, fill: Fill.Normal, selected});\n    },\n    toggleDisabled: state => {\n      if (!Object.keys(state.disabled).length) {\n        const disabled: State['disabled'] = {};\n        const values = selectValues(state);\n\n        for (let x = 0; x < 9; x++) {\n          for (let y = 0; y < 9; y++) {\n            const id = getId(x, y);\n\n            if (values[id]) {\n              disabled[id] = true;\n            }\n          }\n        }\n\n        return {\n          ...state,\n          ...resetHistory(state.history[state.present].values),\n          disabled,\n        };\n      } else {\n        return {\n          ...state,\n          disabled: {},\n        };\n      }\n    },\n    undo: state => {\n      if (state.present === 0) {\n        return state;\n      }\n\n      return reduceHistory({\n        present: findLastInput(state),\n        state,\n      });\n    },\n    redo: state => {\n      const present = state.present + 1;\n\n      if (present === state.history.length) {\n        return state;\n      }\n\n      return reduceHistory({present, state});\n    },\n    timeTravel: (state, {payload: present}) => {\n      return reduceHistory({present, state});\n    },\n    showPossibleSelection: (\n      state,\n      {payload}: PayloadAction<{id: string; value: string} | undefined>,\n    ) => {\n      if (payload) {\n        const {id, value} = payload;\n        state.selected = showPossibleSelection(state, value, id);\n      } else {\n        // On keyboard selection there's no value in its context\n        const id = state.selected[0];\n\n        state.selected = showPossibleSelection(\n          state,\n          selectValues(state)[id],\n          id,\n        );\n      }\n    },\n    selectAll: state => {\n      const selected = [];\n      const values = selectValues(state);\n\n      for (let i = 0; i < 9; i++) {\n        for (let j = 0; j < 9; j++) {\n          const id = getId(i, j);\n\n          if (!values[id] || state.filled === 81) {\n            selected.push(id);\n          }\n        }\n      }\n\n      state.selected = selected;\n    },\n    select: (\n      state,\n      {\n        payload: {id, isSelected},\n      }: PayloadAction<{id: Identifier; isSelected: boolean}>,\n    ) => {\n      const foundAt = state.selected.indexOf(id);\n\n      if (foundAt >= 0) {\n        if (!isSelected) {\n          return {\n            ...state,\n            selected: [\n              ...state.selected.slice(0, foundAt),\n              ...state.selected.slice(foundAt + 1),\n            ],\n          };\n        }\n      } else {\n        if (isSelected) {\n          return {\n            ...state,\n            selected: [...state.selected, id],\n          };\n        }\n      }\n\n      return state;\n    },\n    setSelected: (state, {payload: selected}) => ({\n      ...state,\n      selected,\n    }),\n    clearSelected: state => ({\n      ...state,\n      selected: [],\n    }),\n  },\n});\n","import {atom} from 'recoil';\n\nexport const lastSelectedState = atom<string>({\n  key: 'lastSelectedState',\n  default: '',\n});\n","import {createStore} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport {reducer} from './reducer';\n\nexport const store = createStore(reducer, composeWithDevTools());\n","import {atom} from 'recoil';\n\n// Show possible values for each column + row\nexport const columRowAidState = atom({\n  key: 'isAidOnState',\n  default: false,\n});\n\nexport const autoPencilState = atom({\n  key: 'autoPencilState',\n  default: false,\n});\n\nexport const autoSelectPossibleState = atom({\n  key: 'autoSelectPossibleState',\n  default: true,\n});\n\nexport const smartFill = atom({\n  key: 'smartFill',\n  default: true,\n});\n\n// Convenience + Game Config\nexport const showHistoryState = atom({\n  key: 'showHistoryState',\n  default: false,\n});\n\nexport const showMakerState = atom({\n  key: 'showMakerState',\n  default: false,\n});\n\n// UI Overrides\nexport const canOverscrollState = atom({\n  key: `canOverscrollState`,\n  default: window.history.length > 1,\n});\n","import styled from '@emotion/styled';\n\nexport const Divider = styled.div({\n  marginLeft: '20px',\n});\n","import styled from '@emotion/styled';\n\nexport const SectionHeading = styled.h2({\n  margin: '0 0 10px 0',\n  fontSize: '1.1em',\n});\n\nexport const SubsectionHeading = styled.h2({\n  margin: '10px 0',\n  fontSize: '1.1em',\n});\n","import React, {CSSProperties, ReactNode} from 'react';\n\nimport {Transition} from 'react-transition-group';\nimport {TransitionStatus} from 'react-transition-group/Transition';\n\nconst DURATION = 300;\n\ntype Props = {\n  isCollapsed?: boolean;\n  children: ReactNode;\n};\n\nconst transitionStyles: {[key in TransitionStatus]?: CSSProperties} = {\n  entering: {transform: `scaleX(1)`, maxWidth: `100%`},\n  entered: {transform: `scaleX(1)`, maxWidth: `100%`},\n  exiting: {transform: `scaleX(0)`, maxWidth: 0},\n  exited: {transform: `scaleX(0)`, maxWidth: 0},\n};\n\nconst defaultSyles: CSSProperties = {\n  display: 'flex',\n  transition: `max-width ${DURATION}ms linear, transform ${DURATION}ms ease-in-out`,\n  transformOrigin: 'right',\n};\n\nexport const CollapsibleWidth = ({isCollapsed, children}: Props) => {\n  return (\n    <Transition in={isCollapsed} timeout={DURATION} unmountOnExit>\n      {state => {\n        // Using `style` over a styled component to optimize performance\n        return (\n          <div style={{...defaultSyles, ...transitionStyles[state]}}>\n            {children}\n          </div>\n        );\n      }}\n    </Transition>\n  );\n};\n","import React, {ReactNode} from 'react';\nimport * as FluentUi from '@fluentui/react';\nimport {RecoilState, useRecoilState} from 'recoil';\n\nimport styled from '@emotion/styled';\n\nimport {SectionHeading, Divider} from '../ui';\n\nimport {\n  showHistoryState,\n  columRowAidState,\n  canOverscrollState,\n  showMakerState,\n  autoPencilState,\n  autoSelectPossibleState,\n  smartFill,\n} from './recoil';\n\nimport {useDispatch, useSelector} from 'react-redux';\nimport {actions, selectHasValues, State} from '../state';\nimport {FontFamily} from '../globals';\n\nconst Container = styled.div({\n  overflow: 'visible', // Empty styled divs make it hidden\n});\n\nconst ToggleContainer = styled.div({\n  display: 'flex',\n  flexDirection: 'column',\n  whiteSpace: 'nowrap',\n  paddingLeft: '2px', // accounts for FluentUi's focus ring\n});\n\nconst labelStyle: FluentUi.IStyle = {\n  fontFamily: FontFamily.All,\n};\n\nconst Toggle = (props: FluentUi.IToggleProps) => {\n  return (\n    <FluentUi.Toggle\n      {...props}\n      inlineLabel={true}\n      styles={{\n        label: labelStyle,\n      }}\n    />\n  );\n};\n\nconst RecoilControl = ({\n  state,\n  label,\n}: {\n  state: RecoilState<boolean>;\n  label: string;\n}) => {\n  const [isOn, setIsOn] = useRecoilState(state);\n\n  const handleChange = () => setIsOn(!isOn);\n\n  return <Toggle label={label} checked={isOn} onChange={handleChange} />;\n};\n\n// Givens are described as disabled in the store\nconst GivensControl = ({label}: {label: string}) => {\n  const dispatch = useDispatch();\n\n  const isDisabled = useSelector<State, boolean>(({disabled}) => {\n    return !!Object.keys(disabled).length;\n  });\n\n  const hasValues = useSelector(selectHasValues);\n\n  const handleDisable = () => dispatch(actions.toggleDisabled());\n\n  return (\n    <Toggle\n      label={label}\n      disabled={!hasValues}\n      onChange={handleDisable}\n      checked={isDisabled}\n    />\n  );\n};\n\nconst Group = ({heading, children}: {heading: string; children: ReactNode}) => {\n  // TODO: should probs relate the headings and the toggles, tf is your a11y training\n  return (\n    <>\n      <SectionHeading>{heading}</SectionHeading>\n      <ToggleContainer>{children}</ToggleContainer>\n    </>\n  );\n};\n\nexport const Settings = () => {\n  return (\n    <>\n      <Divider />\n      <Container>\n        <Group heading=\"AI\">\n          <RecoilControl\n            state={columRowAidState}\n            label=\"Two Dimensional Assist\"\n          />\n          <RecoilControl\n            state={autoPencilState}\n            label=\"Distribute Every Possibility\"\n          />\n          <RecoilControl\n            state={autoSelectPossibleState}\n            label=\"Optical Neural Networks\"\n          />\n          <RecoilControl\n            state={smartFill}\n            label=\"Prevent Fill Without Aloneness \"\n          />\n        </Group>\n        <Group heading=\"Vex\">\n          <RecoilControl\n            state={showHistoryState}\n            label=\"Disturb History Violently\"\n          />\n          <RecoilControl\n            state={showMakerState}\n            label=\"Allow Lower Difficulty Ashamedly\"\n          />\n          <GivensControl label=\"Absolutely Protect Givens\" />\n        </Group>\n        <Group heading=\"Bond\">\n          <RecoilControl\n            state={canOverscrollState}\n            label=\"Censor Twin Finger Gestures\"\n          />\n        </Group>\n      </Container>\n    </>\n  );\n};\n","import {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useRecoilState, useRecoilValue} from 'recoil';\n\nimport {Fill, transformId, Colors} from '../globals';\nimport {actions, lastSelectedState, selectSelected} from '../state';\nimport {smartFill} from '../Settings';\n\nconst getIdFromArrowKey = ({key, id}: {key: string; id: string}) => {\n  let row = 0;\n  let column = 0;\n\n  switch (key) {\n    case 'ArrowDown':\n      row += 1;\n      break;\n    case 'ArrowUp':\n      row -= 1;\n      break;\n    case 'ArrowLeft':\n      column -= 1;\n      break;\n    case 'ArrowRight':\n      column += 1;\n      break;\n  }\n\n  return transformId(id, {row, column});\n};\n\nexport const useKeyDownEffect = () => {\n  const dispatch = useDispatch();\n\n  const selected = useSelector(selectSelected);\n\n  const [lastSelected, setLastSelected] = useRecoilState(lastSelectedState);\n  const shouldSmartFill = useRecoilValue(smartFill);\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    const {key, metaKey, shiftKey, altKey, code} = event;\n\n    const fill = metaKey ? Fill.Pencil : Fill.Normal;\n\n    // Using code to account for altKey. Hope no one is a psycho and maps their numbers elsewhere\n    if (code.match(/Digit[1-9]/)) {\n      const digit = code[5];\n\n      if (metaKey) {\n        event.preventDefault(); // Prevents browser tab switch\n      }\n\n      if (altKey) {\n        dispatch(\n          actions.fill({\n            key: Colors.Highlight[parseInt(digit, 10) - 1],\n            fill: Fill.Color,\n            selected,\n          }),\n        );\n      } else if (shiftKey || (shouldSmartFill && fill === Fill.Normal)) {\n        dispatch(actions.smartFill(digit));\n      } else {\n        dispatch(actions.fill({key: digit, fill, selected}));\n      }\n    }\n\n    switch (key) {\n      case '`':\n      case 'Backspace':\n        dispatch(actions.fill({key: '', fill: Fill.Delete, selected}));\n        return;\n      case 'Enter':\n      case 'Spacebar':\n      case ' ': {\n        if (selected.length === 1) {\n          dispatch(actions.showPossibleSelection());\n        }\n\n        return;\n      }\n      case 'z': {\n        if (metaKey) {\n          if (shiftKey) {\n            dispatch(actions.redo());\n          } else {\n            dispatch(actions.undo());\n          }\n        }\n        return;\n      }\n      case 'a': {\n        if (metaKey) {\n          event.preventDefault(); // Highlight other text\n          dispatch(actions.selectAll());\n        }\n        return;\n      }\n      case 'ArrowDown':\n      case 'ArrowUp':\n      case 'ArrowLeft':\n      case 'ArrowRight': {\n        event.preventDefault(); // Scroll\n\n        const idFromArrow = getIdFromArrowKey({\n          key,\n          id: lastSelected,\n        });\n\n        if (idFromArrow) {\n          dispatch(actions.setSelected([idFromArrow]));\n          setLastSelected(idFromArrow);\n        }\n        return;\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n};\n","import {useCallback, useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {useRecoilValue, useResetRecoilState} from 'recoil';\nimport {canOverscrollState} from '../Settings/recoil';\n\nimport {actions, lastSelectedState} from '../state';\n\nimport {useKeyDownEffect} from './useKeyDownEffect';\n\nexport const System = () => {\n  const dispatch = useDispatch();\n\n  useKeyDownEffect();\n\n  const resetLastSelected = useResetRecoilState(lastSelectedState);\n  const canOverscroll = useRecoilValue(canOverscrollState);\n\n  const handleBlur = useCallback(() => {\n    dispatch(actions.clearSelected());\n    resetLastSelected();\n  }, [resetLastSelected, dispatch]);\n\n  useEffect(() => {\n    window.addEventListener('blur', handleBlur);\n\n    return () => {\n      window.removeEventListener('blur', handleBlur);\n    };\n  }, [handleBlur]);\n\n  useEffect(() => {\n    if (canOverscroll) {\n      document.body.style.overscrollBehavior = 'none';\n    } else {\n      document.body.style.overscrollBehavior = 'auto';\n    }\n  }, [canOverscroll]);\n\n  return <>{null}</>;\n};\n","import styled from '@emotion/styled';\n\nimport {actions, Record as RecordState, State} from '../state';\nimport {Colors, Fill, getIndices} from '../globals';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useEffect, useRef} from 'react';\n\nconst Subject = styled.span({\n  color: Colors.Fill,\n});\n\nconst Container = styled.div({\n  cursor: 'pointer',\n  ':hover': {\n    backgroundColor: Colors.Selected,\n  },\n  paddingLeft: `0.5em`,\n  paddingRight: `0.5em`,\n});\n\nconst Selected = styled.div({\n  fontWeight: 'bold',\n  transform: `scale(1.1)`,\n});\n\nconst HighlightContainer = styled.span({\n  display: 'inline-flex',\n  alignItems: 'center',\n});\n\nconst Color = styled.span({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: `0.9em`,\n  width: `0.9em`,\n  border: '1px solid black',\n  borderRadius: `3px`,\n});\n\nconst createAction = (fill: Fill) => {\n  switch (fill) {\n    case Fill.Pencil:\n      return 'marked';\n    case Fill.Auto:\n      return `auto'ed`;\n    default:\n      return 'inked';\n  }\n};\n\ntype Props = {\n  record: RecordState;\n  index: number;\n};\n\nconst getElementId = (index: number) => {\n  return `record${index}`;\n};\n\nconst colorToValue = (() => {\n  const dictionary: {[color: string]: number} = {};\n  Colors.Highlight.forEach((color, index) => {\n    dictionary[color] = index + 1;\n  });\n\n  return (color: string) => dictionary[color];\n})();\n\nexport const Record = ({record: {selected, fill, key}, index}: Props) => {\n  const dispatch = useDispatch();\n  const isSelected = useSelector<State, boolean>(\n    ({present}) => present === index,\n  );\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (isSelected) {\n      ref.current?.scrollIntoView();\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, []); // Only 1 record is born with isSelected, the rest gain it by click\n\n  const handleClick = () => {\n    dispatch(actions.timeTravel(index));\n    ref.current?.scrollIntoView({behavior: 'smooth', block: 'center'});\n  };\n\n  const {length} = selected;\n\n  let content = <></>; // Can't define JSX, so make TS derive it\n\n  if (length === 0) {\n    content = <Subject>bang!</Subject>;\n  } else {\n    const {row, column} = getIndices(selected[0]);\n\n    // Human readable row and column\n    const affects =\n      length === 1 ? `(${row + 1}, ${column + 1})` : `${length} cells`;\n\n    if (fill === Fill.Delete) {\n      content = (\n        <span>\n          <Subject>removed</Subject> {affects}\n        </span>\n      );\n    } else if (fill === Fill.Color) {\n      const style = {backgroundColor: key};\n\n      content = (\n        <HighlightContainer>\n          colored&nbsp;\n          <Color style={style}>{colorToValue(key)}</Color>\n          &nbsp;{affects}\n        </HighlightContainer>\n      );\n    } else {\n      const action = createAction(fill);\n\n      content = (\n        <span>\n          {action} <Subject>{key}</Subject> {affects}\n        </span>\n      );\n    }\n  }\n\n  return (\n    <Container ref={ref} id={getElementId(index)} onClick={handleClick}>\n      {isSelected ? <Selected>{content}</Selected> : content}\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport styled from '@emotion/styled';\nimport {useSelector} from 'react-redux';\n\nimport {State} from '../state';\nimport {Record} from './Record';\nimport {CollapsibleWidth, SectionHeading} from '../ui';\n\nimport {Divider} from '../ui';\nimport {useRecoilValue} from 'recoil';\nimport {showHistoryState} from '../Settings';\n\nconst Container = styled.div({\n  display: 'flex',\n  flexDirection: 'column',\n  whiteSpace: 'nowrap',\n});\n\nconst Scroll = styled.div({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'scroll',\n  height: `22em`, // Number of Records to show\n  paddingTop: `3px`, // accounts for Setting's toggle extra paddings\n});\n\nconst Timeline = () => {\n  const history = useSelector<State, State['history']>(({history}) => history);\n\n  return (\n    <Container>\n      <SectionHeading>History + Time Travel</SectionHeading>\n      <Scroll>\n        {history.map(({record}, index) => {\n          return <Record key={index} record={record} index={index} />;\n        })}\n      </Scroll>\n    </Container>\n  );\n};\n\nexport const History = () => {\n  const canSeeHistory = useRecoilValue(showHistoryState);\n\n  return (\n    <CollapsibleWidth isCollapsed={canSeeHistory}>\n      <Divider />\n      <Timeline />\n    </CollapsibleWidth>\n  );\n};\n","import {atomFamily, selectorFamily} from 'recoil';\nimport {getIndices, getBlockId, getBlockPosition} from '../globals';\nimport {autoPencilState} from '../Settings';\n\ntype Values = {\n  [index: number]: string; // value\n};\n\nconst getUniqueValues = (values: Values) => {\n  const unique = new Set<string>();\n\n  Object.keys(values).forEach(index => {\n    unique.add(values[Number(index)]);\n  });\n\n  return unique;\n};\n\nconst isColliding = (value: string, state: Values) => {\n  if (!value) {\n    return true;\n  }\n\n  let repeats = 0;\n  for (let i = 0; i < 9; i++) {\n    if (state[i] === value) {\n      repeats++;\n    }\n\n    if (repeats > 1) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport const rowState = atomFamily<Values, number>({\n  key: 'rowState',\n  default: () => ({}),\n});\n\nexport const uniqueRowSelector = selectorFamily<Set<string>, number>({\n  key: 'uniqueRowSelector',\n  get: (id: number) => ({get}) => getUniqueValues(get(rowState(id))),\n});\n\nexport const rowSelector = selectorFamily<string, string>({\n  key: 'rowSelector',\n  get: () => () => '',\n  set: (id: string) => ({set}, value) => {\n    const {row, column} = getIndices(id);\n\n    set(rowState(row), (previous: Values) => ({\n      ...previous,\n      [column]: value as string, // The | DefaultValue destroys it\n    }));\n  },\n});\n\nexport const isRowValidSelector = selectorFamily<boolean, string>({\n  key: `isRowValidSelector`,\n  get: (id: string) => ({get}) => {\n    const {row, column} = getIndices(id);\n\n    const state = get(rowState(row));\n    const value = state[column];\n\n    return isColliding(value, state);\n  },\n});\n\nexport const columnState = atomFamily<Values, number>({\n  key: 'columnState',\n  default: () => ({}),\n});\n\nexport const uniqueColumnSelector = selectorFamily<Set<string>, number>({\n  key: 'uniqueColumnSelector',\n  get: (id: number) => ({get}) => getUniqueValues(get(columnState(id))),\n});\n\nexport const columnSelector = selectorFamily<string, string>({\n  key: 'columnSelector',\n  get: () => () => '',\n  set: (id: string) => ({set}, value) => {\n    const {row, column} = getIndices(id);\n\n    set(columnState(column), (previous: Values) => ({\n      ...previous,\n      [row]: value as string, // The | DefaultValue destroys it\n    }));\n  },\n});\n\nexport const isColumnValidSelector = selectorFamily<boolean, string>({\n  key: `isColumnValidSelector`,\n  get: (id: string) => ({get}) => {\n    const {row, column} = getIndices(id);\n\n    const state = get(columnState(column));\n    const value = state[row];\n\n    return isColliding(value, state);\n  },\n});\n\nexport const blockState = atomFamily<Values, string>({\n  key: 'blockState',\n  default: () => ({}),\n});\n\nexport const uniqueBlockSelector = selectorFamily<Set<string>, string>({\n  key: 'uniqueBlockSelector',\n  get: (id: string) => ({get}) => getUniqueValues(get(blockState(id))),\n});\n\nexport const blockSelector = selectorFamily<string, string>({\n  key: 'blockSelector',\n  get: () => () => '',\n  set: (id: string) => ({set}, value) => {\n    const indices = getIndices(id);\n\n    const block = getBlockId(indices);\n    const position = getBlockPosition(indices);\n\n    set(blockState(block), (previous: Values) => ({\n      ...previous,\n      [position]: value as string, // The | DefaultValue destroys it\n    }));\n  },\n});\n\nexport const isBlockValidSelector = selectorFamily<boolean, string>({\n  key: `isBlockValidSelector`,\n  get: (id: string) => ({get}) => {\n    const indices = getIndices(id);\n\n    const block = getBlockId(indices);\n    const position = getBlockPosition(indices);\n\n    const state = get(blockState(block));\n    const value = state[position];\n\n    return isColliding(value, state);\n  },\n});\n\nexport const tryUniqueCellSelector = selectorFamily<\n  Set<string> | undefined,\n  string\n>({\n  key: 'tryUniqueCellSelector',\n  get: (id: string) => ({get}) => {\n    if (!get(autoPencilState)) {\n      return;\n    }\n\n    const indices = getIndices(id);\n\n    const rowSet = get(uniqueRowSelector(indices.row));\n    const columnSet = get(uniqueColumnSelector(indices.column));\n    const blockSet = get(uniqueBlockSelector(getBlockId(indices)));\n\n    const cells = new Set<string>();\n\n    for (let i = 1; i <= 9; i++) {\n      const value = i.toString();\n\n      if (blockSet.has(value) || rowSet.has(value) || columnSet.has(value)) {\n        cells.add(value);\n      }\n    }\n\n    return cells;\n  },\n});\n","import {MouseEventHandler, useEffect} from 'react';\n\nimport styled from '@emotion/styled';\n\nimport {\n  actions,\n  Identifier,\n  Pencil as PencilState,\n  selectPencil,\n} from '../state';\nimport {Colors, Fill, Indices, Size} from '../globals';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useRecoilValue} from 'recoil';\nimport {tryUniqueCellSelector} from '../validation';\nimport {autoSelectPossibleState} from '../Settings';\n\ntype Props = {\n  identifier: Identifier;\n};\n\nconst Grid = styled.div(\n  {\n    display: 'grid',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: Size.Pencil,\n    height: Size.Pencil,\n    fontSize: Size.PencilFont,\n    lineHeight: Size.PencilFont,\n    color: Colors.Pencil,\n    fontWeight: 600,\n  },\n  ({row, column}: Indices) => ({gridRow: row + 1, gridColumn: column + 1}),\n);\n\nexport const Pencil = ({identifier: id}: Props) => {\n  const manualPencil = useSelector(selectPencil(id));\n  const uniqueValues = useRecoilValue(tryUniqueCellSelector(id));\n\n  const dispatch = useDispatch();\n  const doAutoFill = useRecoilValue(autoSelectPossibleState);\n\n  const autoPencil: PencilState = {};\n  let remainingValue = '';\n\n  if (uniqueValues) {\n    for (let i = 1; i <= 9; i++) {\n      const value = i.toString();\n\n      if (!uniqueValues.has(value)) {\n        autoPencil[value] = true;\n        remainingValue = value;\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (doAutoFill && uniqueValues?.size === 8) {\n      dispatch(\n        actions.fill({selected: [id], fill: Fill.Auto, key: remainingValue}),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [doAutoFill, uniqueValues]);\n\n  const handleDoubleClick = (value: string): MouseEventHandler => () => {\n    if (value) {\n      dispatch(actions.showPossibleSelection({id, value}));\n    }\n  };\n\n  const pencil = uniqueValues ? autoPencil : manualPencil;\n\n  const cells = [];\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      const number = i * 3 + j + 1; // number on the mark\n\n      const mark = pencil?.[number] ? `${number}` : '';\n\n      cells.push(\n        <Grid\n          key={number}\n          row={i}\n          column={j}\n          onDoubleClick={handleDoubleClick(mark)}\n        >\n          {mark}\n        </Grid>,\n      );\n    }\n  }\n\n  return <>{cells}</>;\n};\n","import {useCallback, useEffect} from 'react';\n\nimport styled from '@emotion/styled';\n\nimport {Identifier, selectIsDisabled} from '../state';\nimport {Colors, Size} from '../globals';\nimport {useSelector} from 'react-redux';\nimport {\n  isRowValidSelector,\n  rowSelector,\n  isColumnValidSelector,\n  columnSelector,\n  isBlockValidSelector,\n  blockSelector,\n} from '../validation';\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\n\ntype Props = {\n  identifier: Identifier;\n  value: string; // 1-9 or empty\n};\n\nconst Container = styled.span(\n  ({isDisabled, isValid}: {isValid: boolean; isDisabled: boolean}) => ({\n    fontSize: Size.PenFont,\n    lineHeight: Size.PenFont,\n    fontWeight: isDisabled ? 600 : 'normal',\n    color: !isValid ? Colors.Error : isDisabled ? Colors.Disabled : Colors.Fill,\n  }),\n);\n\n// TODO: Maybe move this to validators\nconst useIsValid = (id: string) => {\n  const isRowValid = useRecoilValue(isRowValidSelector(id));\n  const isColumnValid = useRecoilValue(isColumnValidSelector(id));\n  const isBlockValid = useRecoilValue(isBlockValidSelector(id));\n\n  return isRowValid && isColumnValid && isBlockValid;\n};\n\nconst useValueEffect = (id: string, value: string) => {\n  const setRow = useSetRecoilState(rowSelector(id));\n  const setColumn = useSetRecoilState(columnSelector(id));\n  const setBlock = useSetRecoilState(blockSelector(id));\n\n  const setValue = useCallback(\n    (value: string) => {\n      setRow(value);\n      setColumn(value);\n      setBlock(value);\n    },\n    [setRow, setColumn, setBlock],\n  );\n\n  // TODO: find a way to prevent this\n  useEffect(() => {\n    setValue(value);\n    return () => setValue(''); // reset validations\n  }, [value, setValue]);\n};\n\nexport const Pen = ({identifier: id, value}: Props) => {\n  const isDisabled = useSelector(selectIsDisabled(id));\n\n  const isValid = useIsValid(id);\n  useValueEffect(id, value);\n\n  if (!value) {\n    return null;\n  }\n\n  return (\n    <Container isValid={isValid} isDisabled={isDisabled}>\n      {value}\n    </Container>\n  );\n};\n","import {FC} from 'react';\n\nimport styled from '@emotion/styled';\nimport {useSelector} from 'react-redux';\nimport {Identifier, selectHighlight} from '../state';\nimport {Size} from '../globals';\n\nconst Highlight = styled.div({\n  display: 'grid',\n});\n\nconst Selection = styled.div({\n  display: 'grid',\n  justifyContent: 'center',\n  alignItems: 'center',\n});\n\nconst halfCell = `${\n  parseInt(Size.Pen.substring(0, 2), 10) / 2\n}${Size.Pen.substring(2)}`;\n\nexport const CellOverlay: FC<{\n  isSelected: boolean;\n  isFirstSelected: boolean;\n  value: string;\n  identifier: Identifier;\n}> = ({isSelected, isFirstSelected, children, value, identifier: id}) => {\n  const highlight = useSelector(selectHighlight(id));\n\n  const selectionStyle = isSelected\n    ? {\n        backgroundColor: 'rgb(200, 200, 200, 0.5)',\n        boxShadow: isFirstSelected ? `inset 0 0 4px black` : undefined,\n      }\n    : undefined;\n\n  const highlightStyle =\n    highlight && !value\n      ? {\n          backgroundColor: highlight,\n          boxShadow: isSelected ? `inset 0 0 ${halfCell} white` : undefined,\n        }\n      : undefined;\n\n  return (\n    <Highlight style={highlightStyle}>\n      <Selection style={selectionStyle}>{children}</Selection>\n    </Highlight>\n  );\n};\n","import {MouseEventHandler} from 'react';\n\nimport styled from '@emotion/styled';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  actions,\n  lastSelectedState,\n  selectIsFirstSelected,\n  selectIsSelected,\n  selectValue,\n} from '../state';\nimport {flags, getId, Indices, Size} from '../globals';\nimport {useSetRecoilState} from 'recoil';\nimport {Pencil} from './Pencil';\nimport {Pen} from './Pen';\nimport {CellOverlay} from './CellOverlay';\n\nconst Container = styled.div(\n  {\n    display: 'grid',\n    height: Size.Pen,\n    width: Size.Pen,\n    backgroundColor: 'white',\n  },\n  ({row, column}: any) => ({\n    gridRow: (row % 3) + 1,\n    gridColumn: (column % 3) + 1,\n  }),\n);\n\nexport const Cell = ({row, column}: Indices) => {\n  const id = getId(row, column);\n\n  const dispatch = useDispatch();\n\n  const value = useSelector(selectValue(id));\n\n  const setLastSelected = useSetRecoilState(lastSelectedState);\n\n  const isSelected = useSelector(selectIsSelected(id));\n  const isFirstSelected = useSelector(selectIsFirstSelected(id));\n\n  const handleMouseEnter: MouseEventHandler = ({metaKey}) => {\n    if (flags.isSelecting) {\n      if (metaKey) {\n        dispatch(actions.select({id, isSelected: flags.selectingFill}));\n      } else {\n        dispatch(actions.select({id, isSelected: true}));\n      }\n    }\n  };\n\n  const handleMouseDown: MouseEventHandler = ({metaKey, button}) => {\n    if (button !== 0) {\n      return;\n    }\n\n    flags.selectingFill = !isSelected;\n\n    if (value && !flags.isSelecting && !metaKey) {\n      setLastSelected(id);\n      dispatch(actions.showPossibleSelection({id, value}));\n      return;\n    }\n\n    setLastSelected(id);\n\n    if (!metaKey) {\n      dispatch(actions.clearSelected());\n    }\n\n    if (metaKey && isSelected) {\n      dispatch(actions.select({id, isSelected: false}));\n      return;\n    }\n\n    dispatch(actions.select({id, isSelected: true}));\n  };\n\n  return (\n    <Container\n      row={row}\n      column={column}\n      onMouseEnter={handleMouseEnter}\n      onMouseDown={handleMouseDown}\n    >\n      <CellOverlay\n        identifier={id}\n        isSelected={isSelected}\n        isFirstSelected={isFirstSelected}\n        value={value}\n      >\n        {value ? (\n          <Pen identifier={id} value={value} />\n        ) : (\n          <Pencil identifier={id} />\n        )}\n      </CellOverlay>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nimport {Cell} from './Cell';\nimport {Indices} from '../globals';\n\nconst Container = styled.div(\n  {\n    display: 'grid',\n    gap: '1px',\n  },\n  ({row, column}: any) => ({\n    gridRow: row + 1,\n    gridColumn: column + 1,\n  }),\n);\n\nexport const Box = (props: Indices) => {\n  const relativeRow = props.row * 3;\n  const relativeColumn = props.column * 3;\n\n  let cells = [];\n\n  for (let row = 0 + relativeRow; row < 3 + relativeRow; row++) {\n    for (\n      let column = 0 + relativeColumn;\n      column < 3 + relativeColumn;\n      column++\n    ) {\n      cells.push(<Cell row={row} column={column} key={`${row}${column}`} />);\n    }\n  }\n\n  return (\n    <Container row={props.row} column={props.column}>\n      {cells}\n    </Container>\n  );\n};\n","import {MouseEventHandler} from 'react';\n\nimport styled from '@emotion/styled';\n\nimport {flags} from '../globals';\n\nimport {Box} from './Box';\n\nconst Container = styled.div({\n  display: 'grid',\n  cursor: 'pointer',\n  backgroundColor: 'black',\n  border: '3px solid black',\n  gap: '3px',\n});\n\nconst handleMouseDown: MouseEventHandler = ({button}) => {\n  if (button === 0) {\n    flags.isSelecting = true;\n  } else if (button === 2) {\n    flags.isSelecting = false;\n  }\n};\n\nexport const Grid = () => {\n  let boxes = [];\n\n  for (let row = 0; row < 3; row++) {\n    for (let column = 0; column < 3; column++) {\n      boxes.push(<Box row={row} column={column} key={`${row}${column}`} />);\n    }\n  }\n\n  return <Container onMouseDown={handleMouseDown}>{boxes}</Container>;\n};\n","import styled from '@emotion/styled';\n\nimport {Indices, Size} from '../globals';\nimport {useRecoilValue} from 'recoil';\nimport {uniqueColumnSelector, uniqueRowSelector} from '../validation';\n\nconst Container = styled.div({display: 'grid'});\n\nconst AllowedValue = styled.div(\n  {\n    display: 'grid',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: Size.Pencil,\n    height: Size.Pencil,\n    fontSize: Size.PencilFont,\n    lineHeight: Size.PencilFont,\n    color: 'white',\n    backgroundColor: '#212121',\n    fontWeight: 600,\n  },\n  ({row, column}: Indices) => ({gridRow: row + 1, gridColumn: column + 1}),\n);\n\nconst AllowedValues = ({values}: {values: Set<string>}) => {\n  const cells = [];\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      const number = i * 3 + j + 1;\n\n      cells.push(\n        <AllowedValue key={number} row={i} column={j}>\n          {values.has(`${number}`) ? '' : number}\n        </AllowedValue>,\n      );\n    }\n  }\n\n  return <Container>{cells}</Container>;\n};\n\ntype Props = {\n  identifier: number;\n};\n\nexport const AllowedColumnValues = ({identifier: id}: Props) => {\n  const values = useRecoilValue(uniqueColumnSelector(id));\n\n  return <AllowedValues values={values} />;\n};\n\nexport const AllowedRowValues = ({identifier: id}: Props) => {\n  const values = useRecoilValue(uniqueRowSelector(id));\n\n  return <AllowedValues values={values} />;\n};\n\nexport const Aid = () => {};\n","import styled from '@emotion/styled';\n\nimport {Size} from '../globals';\n\nimport {AllowedRowValues} from './AllowedValues';\n\nconst Container = styled.div({\n  display: 'grid',\n  gridAutoFlow: 'row',\n  rowGap: '3px',\n  padding: `3px 3px 3px`,\n});\n\nconst Box = styled.div({\n  display: 'grid',\n  rowGap: '1px',\n  gridTemplateColumns: Size.Pen,\n  gridTemplateRows: `repeat (3 ${Size.Pen})`,\n});\n\nexport const RowsAid = () => {\n  let boxes = [];\n\n  for (let i = 0; i < 9; i = i + 3) {\n    let cells = [];\n\n    for (let j = i; j < i + 3; j++) {\n      cells.push(<AllowedRowValues key={j} identifier={j} />);\n    }\n    boxes.push(<Box key={i}>{cells}</Box>);\n  }\n  return <Container>{boxes}</Container>;\n};\n","import styled from '@emotion/styled';\n\nimport {Size} from '../globals';\n\nimport {AllowedColumnValues} from './AllowedValues';\n\nconst Container = styled.div({\n  display: 'grid',\n  columnGap: '3px',\n  gridAutoFlow: 'column',\n  padding: `0 3px 3px 3px`,\n});\n\nconst Box = styled.div({\n  display: 'grid',\n  columnGap: '1px',\n  gridTemplateColumns: `repeat (3 ${Size.Pen})`,\n  gridTemplateRows: Size.Pen,\n  gridAutoFlow: 'column',\n});\n\nexport const ColumnsAid = () => {\n  let boxes = [];\n\n  for (let i = 0; i < 9; i = i + 3) {\n    let cells = [];\n\n    for (let j = i; j < i + 3; j++) {\n      cells.push(<AllowedColumnValues key={j} identifier={j} />);\n    }\n    boxes.push(<Box key={i}>{cells}</Box>);\n  }\n\n  return <Container>{boxes}</Container>;\n};\n","import React, {useCallback, useEffect, useReducer, useRef} from 'react';\n\nimport styled from '@emotion/styled';\nimport {useSelector} from 'react-redux';\nimport {selectIsFilled, selectStarted} from '../state';\n\nconst Container = styled.div({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  fontSize: `1.1em`,\n});\n\nconst PlayTime = styled.span({\n  cursor: 'pointer',\n});\n\nconst CompletedTime = styled.span({\n  marginRight: `1em`,\n});\n\nconst zeroPad = (n: number) => {\n  return n < 10 ? `0${n}` : `${n}`;\n};\n\nconst getTime = (ms: number) => {\n  const seconds = ms % 60;\n\n  const rawMinutes = ~~(ms / 60); // bitwise NOT is used to truncate\n  const minutes = rawMinutes % 60;\n\n  const rawHours = ~~(rawMinutes / 60);\n  const hours = rawHours % 60;\n\n  return {\n    seconds,\n    minutes,\n    hours,\n  };\n};\n\nconst getTimer = (ms: number) => {\n  const {seconds, minutes, hours} = getTime(ms);\n\n  if (hours) {\n    return `${hours}:${zeroPad(minutes)}:${zeroPad(seconds)}`;\n  } else if (minutes) {\n    return `${minutes}:${zeroPad(seconds)}`;\n  } else {\n    return `${seconds}`;\n  }\n};\n\nconst types = {\n  add: 'add',\n  clear: 'clear',\n};\n\nlet start = 0; // Used to minimize renders on state diff\nconst reducer = (state: number, {type}: {type: string}) => {\n  switch (type) {\n    case types.add: {\n      return ~~((Date.now() - start) / 1000);\n    }\n    case types.clear: {\n      return 0;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const Timer = () => {\n  const completed = useSelector(selectIsFilled);\n  const started = useSelector(selectStarted);\n\n  const [ellapsed, changeEllapsed] = useReducer(reducer, 0);\n  const intervalId = useRef(0);\n  const saved = useRef(0);\n  const completedTime = useRef(0);\n\n  const pace = useCallback(() => {\n    start = Date.now();\n    // Had to use window since it was getting confused with NodeJs's Timer\n    // But we can't use ReturnType since clearInterval expects number\n    intervalId.current = window.setInterval(\n      () => changeEllapsed({type: types.add}),\n      250,\n    );\n  }, []);\n\n  // TODO: use this\n  const pause = () => {\n    saved.current = saved.current + ellapsed;\n    changeEllapsed({type: types.clear});\n    clearInterval(intervalId.current);\n  };\n\n  const reset = useCallback(() => {\n    saved.current = 0;\n    clearInterval(intervalId.current);\n    pace();\n  }, [pace]);\n\n  useEffect(() => {\n    pace();\n    return () => clearInterval(intervalId.current);\n  }, [pace]);\n\n  useEffect(() => {\n    if (started) {\n      reset();\n    }\n  }, [started, reset]);\n\n  const time = ellapsed + saved.current;\n\n  useEffect(() => {\n    if (completed) {\n      completedTime.current = time;\n    } else {\n      completedTime.current = 0;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [completed]);\n\n  return (\n    <Container>\n      {completedTime.current ? (\n        <CompletedTime>{getTimer(completedTime.current)}</CompletedTime>\n      ) : null}\n      <PlayTime onClick={reset}>{getTimer(time)}</PlayTime>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\nimport {useDispatch} from 'react-redux';\n\nimport {Fill, Colors} from '../globals';\nimport {actions} from '../state';\n\nconst Container = styled.div({\n  display: 'flex',\n  padding: '3px',\n  flexDirection: 'column',\n});\n\nconst Bar = styled.div({});\n\n// TODO: What is a11y?\nconst Button = styled.span({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginRight: '9px',\n  width: '2em',\n  height: '2em',\n  border: '1px black solid',\n  borderRadius: '7px',\n  cursor: 'pointer',\n});\n\nconst Color = ({color, value}: {color: string; value: number}) => {\n  const dispatch = useDispatch();\n  const style = {backgroundColor: color};\n\n  const handleClick = () => {\n    dispatch(actions.fill({key: color, fill: Fill.Color}));\n  };\n\n  return (\n    <Button style={style} onClick={handleClick}>\n      {value}\n    </Button>\n  );\n};\n\nexport const Highlighter = () => {\n  return (\n    <Container>\n      <Bar>\n        {Colors.Highlight.map((color, index) => (\n          <Color color={color} value={index + 1} key={color} />\n        ))}\n      </Bar>\n      ⌥ or alt\n    </Container>\n  );\n};\n","import {useRecoilValue} from 'recoil';\nimport styled from '@emotion/styled';\n\nimport {Grid} from '../Grid';\nimport {columRowAidState} from '../Settings/recoil';\n\nimport {RowsAid} from './RowsAid';\nimport {ColumnsAid} from './ColumnsAid';\nimport {Timer} from './Timer';\nimport {Highlighter} from './Highlighter';\n\nconst Container = styled.div({\n  display: 'grid',\n  userSelect: 'none',\n  height: `100%`,\n});\n\nconst ColumnsContainer = styled.div({\n  display: 'grid',\n  gridRow: 1,\n  gridColumn: '2 / 4',\n});\n\nconst RowsContainer = styled.div({\n  display: 'grid',\n  gridRow: 2,\n  gridColumn: 1,\n});\n\nconst GridContainer = styled.div({\n  display: 'grid',\n  gridRow: 2,\n  gridColumn: '2 / 4',\n});\n\nconst TimerContainer = styled.div({\n  display: 'grid',\n  gridRow: 3,\n  gridColumn: 3,\n});\n\nconst HighlighterContainer = styled.div({\n  display: 'grid',\n  gridRow: 3,\n  gridColumn: 2,\n});\n\nconst Aid = () => {\n  const isAidOn = useRecoilValue(columRowAidState);\n\n  if (isAidOn) {\n    return (\n      <>\n        <ColumnsContainer>\n          <ColumnsAid />\n        </ColumnsContainer>\n        <RowsContainer>\n          <RowsAid />\n        </RowsContainer>\n      </>\n    );\n  } else {\n    return <>{null}</>;\n  }\n};\n\nexport const Game = () => {\n  return (\n    <Container>\n      <GridContainer>\n        <Grid />\n      </GridContainer>\n      <TimerContainer>\n        <Timer />\n      </TimerContainer>\n      <HighlighterContainer>\n        <Highlighter />\n      </HighlighterContainer>\n      <Aid />\n    </Container>\n  );\n};\n","// 81 digits string, 0-9 where 0 is empty\nexport type Grid = string;\n\n// 000000010400000000020000000000050407008000300001090000300400200050100000000806000\n\n// row[1-9] + column[1-9] + value[1-9]\n// ie: \"112\" is value \"2\" on the topmost leftmost cell\nexport const tuplesToGrid = (...tuples: string[]): Grid => {\n  const dictionary: {[key: number]: string} = {};\n\n  tuples.forEach(tuple => {\n    const row = (parseInt(tuple[0], 10) - 1) * 9;\n    const column = parseInt(tuple[1], 10);\n    const index = row + column;\n\n    dictionary[index] = tuple[2];\n  });\n\n  let grid = '';\n\n  for (let i = 1; i <= 81; i++) {\n    grid += dictionary[i] || '0';\n  }\n\n  return grid;\n};\n","import {Grid} from './normalizers';\nimport {getRandomNumber} from '../globals';\n\n// '000000010400000000020000000000050407008000300001090000300400200050100000000806000';\n\nconst getGridIndex = (row: number, column: number) => {\n  return row * 9 + column;\n};\n\nconst mutateOrder = <T>(sequence: T[]): T[] => {\n  let last = sequence.length,\n    pick,\n    temp;\n\n  while (last) {\n    pick = Math.floor(Math.random() * last--);\n\n    temp = sequence[pick];\n    sequence[pick] = sequence[last];\n    sequence[last] = temp;\n  }\n\n  return sequence;\n};\n\nconst createNumberTranslator = () => {\n  const sequence = mutateOrder([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n  return (value: string) => {\n    switch (value) {\n      case '1':\n        return sequence[0];\n      case '2':\n        return sequence[1];\n      case '3':\n        return sequence[2];\n      case '4':\n        return sequence[3];\n      case '5':\n        return sequence[4];\n      case '6':\n        return sequence[5];\n      case '7':\n        return sequence[6];\n      case '8':\n        return sequence[7];\n      case '9':\n        return sequence[8];\n      default:\n        return value; // '0'\n    }\n  };\n};\n\n// 3x9 or 9x3 sections are interchangable\n// Internal rows or columns are also interchangable\nconst reorderIndices = () => {\n  const first = mutateOrder([0, 1, 2]);\n  const second = mutateOrder([3, 4, 5]);\n  const third = mutateOrder([6, 7, 8]);\n\n  const section = mutateOrder([first, second, third]);\n\n  return [...section[0], ...section[1], ...section[2]];\n};\n\nconst createIndicesTranslator = () => {\n  const sequence = reorderIndices();\n\n  return (index: number) => sequence[index];\n};\n\nconst transposeXY = (row: number, column: number) => {\n  return getGridIndex(column, row);\n};\n\nconst transposeXYInverse = (row: number, column: number) => {\n  return getGridIndex(8 - column, 8 - row);\n};\n\n// In essence reverse\nconst transposeCombined = (row: number, column: number) => {\n  return 80 - getGridIndex(row, column);\n};\n\nconst createTransposer = () => {\n  const transposer = getRandomNumber(2); // 0, 1, 2\n\n  switch (transposer) {\n    case 0:\n      return transposeXY;\n    case 1:\n      return transposeXYInverse;\n    default:\n      return transposeCombined;\n  }\n};\n\nexport const transform = (input: Grid): Grid => {\n  let output = '';\n\n  const translateRow = createIndicesTranslator();\n  const translateColumn = createIndicesTranslator();\n\n  const transpose = createTransposer();\n  const translateNumber = createNumberTranslator();\n\n  for (let x = 0; x < 9; ++x) {\n    const row = translateRow(x);\n\n    for (let y = 0; y < 9; ++y) {\n      const column = translateColumn(y);\n      const value = input[transpose(row, column)];\n      output += translateNumber(value);\n    }\n  }\n\n  return output;\n};\n","import {useRef, useState} from 'react';\n\nimport styled from '@emotion/styled';\nimport {ITextFieldProps, PrimaryButton, TextField} from '@fluentui/react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useRecoilValue, useSetRecoilState} from 'recoil';\n\nimport {showMakerState} from '../Settings';\nimport {actions, selectValues, State} from '../state';\nimport {\n  CollapsibleWidth,\n  Divider,\n  SectionHeading,\n  SubsectionHeading,\n} from '../ui';\nimport {tuplesToGrid, transform} from '../generator';\nimport {getId} from '../globals';\n\nconst Container = styled.div({\n  display: 'flex',\n  flexDirection: 'column',\n  whiteSpace: 'nowrap',\n});\n\nconst StringInput = () => {\n  const dispatch = useDispatch();\n\n  const show = useSetRecoilState(showMakerState);\n\n  const [disabled, setDisabled] = useState(true);\n  const value = useRef('');\n\n  const handleChange: ITextFieldProps['onChange'] = (_, newValue = '') => {\n    const isValid = newValue?.length === 81;\n\n    value.current = newValue;\n\n    setDisabled(!isValid);\n  };\n\n  const handleClick = () => {\n    dispatch(actions.make(value.current));\n    show(false);\n  };\n\n  return (\n    <>\n      <SectionHeading>Remake</SectionHeading>\n      <TextField\n        onChange={handleChange}\n        placeholder=\"81 characters 0-9\"\n        multiline\n        rows={5}\n      />\n      <PrimaryButton onClick={handleClick} disabled={disabled}>\n        Propose\n      </PrimaryButton>\n    </>\n  );\n};\n\nconst PresetButton = ({\n  name,\n  tuples,\n  grid,\n}: {\n  name: string;\n  tuples?: string[];\n  grid?: string;\n}) => {\n  const dispatch = useDispatch();\n  const show = useSetRecoilState(showMakerState);\n\n  const handleClick = () => {\n    const game = tuples ? tuplesToGrid(...tuples) : transform(grid!);\n    dispatch(actions.make(game));\n    show(false);\n  };\n\n  return (\n    <PrimaryButton onClick={handleClick} style={{margin: '1px 0'}}>\n      {name}\n    </PrimaryButton>\n  );\n};\n\nconst Presets = () => {\n  return (\n    <>\n      <SubsectionHeading>Predestined</SubsectionHeading>\n      <PresetButton name=\"OG Miracle\" tuples={['531', '672']} />\n      <PresetButton name=\"WTF Miracle\" tuples={['551', '982']} />\n      <PresetButton\n        name=\"Sample\"\n        grid=\"000000010400000000020000000000050407008000300001090000300400200050100000000806000\"\n      />\n    </>\n  );\n};\n\nconst Transform = () => {\n  const dispatch = useDispatch();\n\n  const state = useSelector((state: State) => state);\n\n  const handleClick = () => {\n    const {disabled} = state;\n    const values = selectValues(state);\n\n    let grid = '';\n\n    for (let x = 0; x < 9; x++) {\n      for (let y = 0; y < 9; y++) {\n        const id = getId(x, y);\n\n        if (disabled[id]) {\n          grid += values[id];\n        } else {\n          grid += '0';\n        }\n      }\n    }\n\n    dispatch(actions.make(transform(grid)));\n  };\n\n  return (\n    <>\n      <SubsectionHeading>Metamorph</SubsectionHeading>\n      <PrimaryButton onClick={handleClick} style={{margin: '1px 0'}}>\n        Do it!\n      </PrimaryButton>\n    </>\n  );\n};\n\nexport const Maker = () => {\n  const isCollapsed = useRecoilValue(showMakerState);\n\n  return (\n    <CollapsibleWidth isCollapsed={isCollapsed}>\n      <Divider />\n      <Container>\n        <StringInput />\n        <Presets />\n        <Transform />\n      </Container>\n    </CollapsibleWidth>\n  );\n};\n","import styled from '@emotion/styled';\nimport {MouseEventHandler} from 'react';\n\nimport {System} from './System';\nimport {Settings} from './Settings';\nimport {History} from './History';\nimport {Game} from './Game';\nimport {Maker} from './Maker';\nimport {FontFamily, flags} from './globals';\n\nconst Container = styled.div({\n  display: 'flex',\n  fontFamily: FontFamily.All,\n  padding: '20px',\n});\n\nconst handleMouseUp: MouseEventHandler = () => {\n  flags.isSelecting = false;\n};\n\nexport default function App() {\n  return (\n    <>\n      <System />\n      <Container onMouseUp={handleMouseUp}>\n        <Game />\n        <History />\n        <Maker />\n        <Settings />\n      </Container>\n    </>\n  );\n}\n","import {render} from 'react-dom';\nimport {RecoilRoot} from 'recoil';\n\nimport {Provider} from 'react-redux';\nimport {store} from './state';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nrender(\n  <Provider store={store}>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </Provider>,\n  rootElement,\n);\n"],"sourceRoot":""}